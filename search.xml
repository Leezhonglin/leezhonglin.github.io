<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>最适合初学Django框架的项目</title>
      <link href="/2018/06/03/%E6%9C%80%E9%80%82%E5%90%88%E5%88%9D%E5%AD%A6Django%E6%A1%86%E6%9E%B6%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/06/03/%E6%9C%80%E9%80%82%E5%90%88%E5%88%9D%E5%AD%A6Django%E6%A1%86%E6%9E%B6%E7%9A%84%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<p>初学Django 包含了页面的增删改查,ajax,分页,中间件,权限……等等知识点</p><p>自己学了一段时间的Django了,开始的是时候有点懵,不过细细回味了一下,于是乎把学习的部分内容总结了一下.以一个项目来分享给大家.希望对大家有帮助.</p><p>项目的样子</p><p><img src="/Users/lizhonglin/Desktop/blog/source/_posts/res/home.png" alt="om"></p><p><img src="/Users/lizhonglin/Desktop/blog/source/_posts/res/adminye.png" alt="dminy"></p>]]></content>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Django之Cookie和Session</title>
      <link href="/2018/05/25/Django%E4%B9%8BCookie%E5%92%8CSession/"/>
      <url>/2018/05/25/Django%E4%B9%8BCookie%E5%92%8CSession/</url>
      <content type="html"><![CDATA[<h5 id="django中的cookie和session"><a href="#django中的cookie和session" class="headerlink" title="django中的cookie和session"></a>django中的cookie和session</h5><blockquote><h6 id="cookie（储存在用户本地终端上的数据）"><a href="#cookie（储存在用户本地终端上的数据）" class="headerlink" title="cookie（储存在用户本地终端上的数据）"></a>cookie（储存在用户本地终端上的数据）</h6><p>Cookie，有时也用其复数形式 <a href="https://baike.baidu.com/item/Cookies/187064" target="_blank" rel="noopener">Cookies</a>，指某些网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）。定义于 RFC2109 和 2965 中的都已废弃，最新取代的规范是 RFC6265 [1]<a href=""> </a> 。（可以叫做浏览器缓存）</p></blockquote><blockquote><h6 id="session（计算机语言）"><a href="#session（计算机语言）" class="headerlink" title="session（计算机语言）"></a>session（计算机语言）</h6><p>:在计算机中，尤其是在网络应用中，称为“会话控制”。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 Session 对象。当会话过期或被放弃后，服务器将终止该会话。Session 对象最常见的一个用法就是存储用户的首选项。例如，如果用户指明不喜欢查看图形，就可以将该信息存储在 Session 对象中。有关使用 Session 对象的详细信息，请参阅“ASP 应用程序”部分的“管理会话”。注意 会话状态仅在支持 cookie 的浏览器中保留。</p></blockquote><h6 id="用户跟踪的三种技术"><a href="#用户跟踪的三种技术" class="headerlink" title="用户跟踪的三种技术"></a>用户跟踪的三种技术</h6><blockquote><p>1.cookie   请求头             &lt;最常用&gt;</p><p>2.url重写   地址栏</p><p>3.隐藏域/隐式表单域   表达提交</p></blockquote><h6 id="执行表单额外的验证"><a href="#执行表单额外的验证" class="headerlink" title="执行表单额外的验证"></a>执行表单额外的验证</h6><p>方法名必须以clean_开头.这个方法是自动执行的.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#例如:</span><br><span class="line">class CarRecordForm(forms.ModelForm):</span><br><span class="line">    carno = forms.CharField(min_length=7, max_length=7, label=&apos;车牌号&apos;, error_messages=&#123;&apos;carno&apos;: &apos;请输入有效的车牌号&apos;&#125;)</span><br><span class="line">    reason = forms.CharField(max_length=50, label=&apos;违章原因&apos;)</span><br><span class="line">    punish = forms.CharField(max_length=50, required=False, label=&apos;处罚方式&apos;)</span><br><span class="line"></span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 执行额外的表单数据验证</span><br><span class="line">    def clean_carno(self):</span><br><span class="line">        _carno = self.cleaned_data[&apos;carno&apos;]</span><br><span class="line">        if not condition:</span><br><span class="line">            raise forms.ValidationError(&apos;...&apos;)</span><br><span class="line">        return _carno</span><br><span class="line">    &quot;&quot;&quot;</span><br></pre></td></tr></table></figure><blockquote><p>如果是GET请求可以给初始数据.需要使用:initial={} 初始数据没有填写完整</p></blockquote><h6 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#cookie是保存在浏览器的临时文件中的用户数据(通常是识别用户的ID/token或者是用户的偏好设置).</span><br><span class="line"></span><br><span class="line">#因为在每次请求服务器时在HTTP请求的请求头中都会携带本网站的Cookie数据</span><br><span class="line"></span><br><span class="line">#那么服务器就可以获取这些信息来识别用户的身份或者了解用户的偏好 这就是所谓的用户跟踪</span><br><span class="line"></span><br><span class="line">#因为HTTP本身是无状态的 所有需要使用Cookie/隐藏域/url重写这样的技术实现用户跟踪</span><br><span class="line"></span><br><span class="line">#从请求中读取指定的cookie  — 通过cookie的名字找到对应的值</span><br><span class="line"></span><br><span class="line">#如果请求中没有指定名字的cookie可以通过get方法的第二个参数设置一个默认的返回值</span><br><span class="line"></span><br><span class="line">#当下次请求的时候会通过请求头的时候传给服务器对比.对比上才能登陆.如果任意一边丢失都会重新登陆</span><br></pre></td></tr></table></figure><h6 id="session"><a href="#session" class="headerlink" title="session"></a>session</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#通过request对象的session属性可以获取到session</span><br><span class="line"># session相当于是服务器端用来保存用户数据的一个字典</span><br><span class="line"># session利用了Cookie保存sessionid</span><br><span class="line"># 通过sessionid就可以获取与某个用户对应的会话(也就是用户数据)</span><br><span class="line"># 如果在浏览器中清除了Cookie那么也就清除了sessionid</span><br><span class="line"># 再次访问服务器时服务器会重新分配新的sessionid这也就意味着之前的用户数据无法找回</span><br><span class="line"># 默认情况下Django的session被设定为持久会话而非浏览器续存期会话</span><br><span class="line"># 通过SESSION_EXPIRE_AT_BROWSER_CLOSE和SESSION_COOKIE_AGE参数可以修改默认设定</span><br><span class="line"># Django中的session是进行了持久化处理的因此需要设定session的序列化方式</span><br><span class="line"># 1.6版开始Django默认的session序列化器是JsonSerializer</span><br><span class="line"># 可以通过SESSION_SERIALIZER来设定其他的序列化器(例如PickleSerializer)</span><br><span class="line">(例如:SESSION_SERIALIZER = &apos;django.contrib.sessions.serializers.PickleSerializer&apos;)</span><br></pre></td></tr></table></figure><h6 id="项目中的cookie"><a href="#项目中的cookie" class="headerlink" title="项目中的cookie"></a>项目中的cookie</h6><h6 id="项目中的cookie-1"><a href="#项目中的cookie-1" class="headerlink" title="项目中的cookie"></a>项目中的cookie</h6><p>案例:记录用户的上次访问时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">def ajax_search(request):</span><br><span class="line">    current_time = datetime.now().ctime()</span><br><span class="line">    # Cookie是保存在浏览器临时文件中的用户数据(通常是识别用户身份的ID/token或者是用户的偏好设置)</span><br><span class="line">    # 因为每次请求服务器时在HTTP请求的请求头中都会携带本网站的Cookie数据</span><br><span class="line">    # 那么服务器就可以获取这些信息来识别用户身份或者了解用户的偏好 这就是所谓的用户跟踪</span><br><span class="line">    # 因为HTTP本身是无状态的 所以需要使用Cookie/隐藏域/URL重写这样的技术来实现用户跟踪</span><br><span class="line">    # 从请求中读取指定的cookie - 通过cookie的名字找到对应的值</span><br><span class="line">    # 如果请求中没有指定名字的cookie可以通过get方法的第二个参数设置一个默认的返回值</span><br><span class="line">    last_visit_time = request.COOKIES.get(&apos;last_visit_time&apos;)</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        response = render(request, &apos;search2.html&apos;,</span><br><span class="line">                          &#123;&apos;last&apos;: last_visit_time if last_visit_time</span><br><span class="line">                           else &apos;你是第一次访问我们的网站&apos;&#125;)</span><br><span class="line">        # 通过render渲染页面后先用set_cookie方法设置cookie后再返回HttpResponse对象</span><br><span class="line">        # 第一个参数是cookie的名字 第二个参数是cookie的值 第三个参数是过期时间(秒)</span><br><span class="line">        response.set_cookie(&apos;last_visit_time&apos;, current_time, max_age=MAX_AGE)</span><br><span class="line">        return response</span><br><span class="line">    else:</span><br><span class="line">        carno = request.POST[&apos;carno&apos;]</span><br><span class="line">        record_list = list(CarRecord.objects.filter(carno__icontains=carno))</span><br><span class="line">        # 第一个参数是要转换成JSON格式(序列化)的对象</span><br><span class="line">        # encoder参数要指定完成自定义对象序列化的编码器(JSONEncoder的子类型)</span><br><span class="line">        # safe参数的值如果为True那么传入的第一个参数只能是字典</span><br><span class="line">        # return HttpResponse(json.dumps(record_list), content_type=&apos;application/json; charset=utf-8&apos;)</span><br><span class="line">        return JsonResponse(record_list, encoder=CarRecordEncoder,</span><br><span class="line">                            safe=False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def search(request):</span><br><span class="line">    # 请求行中的请求命令</span><br><span class="line">    # print(request.method)</span><br><span class="line">    # 请求行中的路径</span><br><span class="line">    # print(request.path)</span><br><span class="line">    # 请求头(以HTTP_打头的键是HTTP请求的请求头)</span><br><span class="line">    # print(request.META)</span><br><span class="line">    # 查询参数: http://host/path/resource?a=b&amp;c=d</span><br><span class="line">    # print(request.GET)</span><br><span class="line">    # 表单参数</span><br><span class="line">    # print(request.POST)</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        ctx = &#123;&apos;show_result&apos;: False&#125;</span><br><span class="line">    else:</span><br><span class="line">        carno = request.POST[&apos;carno&apos;]</span><br><span class="line">        ctx = &#123;</span><br><span class="line">            &apos;show_result&apos;: True,</span><br><span class="line">            &apos;record_list&apos;: list(CarRecord.objects.filter(carno__contains=carno))&#125;</span><br><span class="line">    return render(request, &apos;search.html&apos;, ctx)</span><br></pre></td></tr></table></figure><h5 id="Django项目完整步骤"><a href="#Django项目完整步骤" class="headerlink" title="Django项目完整步骤:"></a>Django项目完整步骤:</h5><h6 id="1-建项目"><a href="#1-建项目" class="headerlink" title="1.建项目"></a>1.建项目</h6><h6 id="2-安装pymysql"><a href="#2-安装pymysql" class="headerlink" title="2.安装pymysql"></a>2.安装pymysql</h6><h6 id="3-在项目文件夹下面的init-配置pymysql"><a href="#3-在项目文件夹下面的init-配置pymysql" class="headerlink" title="3.在项目文件夹下面的init 配置pymysql"></a>3.在项目文件夹下面的<strong>init</strong> 配置pymysql</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在项目文件夹下面的__init__ 配置pymysql</span><br><span class="line">import pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure><h6 id="4-配置INSTALLED-APPS"><a href="#4-配置INSTALLED-APPS" class="headerlink" title="4.配置INSTALLED_APPS"></a>4.配置INSTALLED_APPS</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;cart.apps.CartConfig&apos;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">中间件 位于浏览器和服务器中间</span><br><span class="line">过滤拦截器</span><br><span class="line">拦截请求和响应</span><br><span class="line">HttpResonse</span><br><span class="line">拦截下来 附加额外的操作</span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    &apos;django.middleware.security.SecurityMiddleware&apos;,</span><br><span class="line">    &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;,</span><br><span class="line">    &apos;django.middleware.common.CommonMiddleware&apos;,</span><br><span class="line">    &apos;django.middleware.csrf.CsrfViewMiddleware&apos;,</span><br><span class="line">    &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;,</span><br><span class="line">    &apos;django.contrib.messages.middleware.MessageMiddleware&apos;,</span><br><span class="line">    &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h6 id="5数据库的配置"><a href="#5数据库的配置" class="headerlink" title="5数据库的配置"></a>5数据库的配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;shop&apos;,</span><br><span class="line">        &apos;HOST&apos;:&apos;127.0.0.1&apos;,</span><br><span class="line">        &apos;POST&apos;:&apos;3306&apos;,</span><br><span class="line">        &apos;USER&apos;:&apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;:&apos;123456&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="6配置静态资源"><a href="#6配置静态资源" class="headerlink" title="6配置静态资源"></a>6配置静态资源</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR,&apos;static&apos;),]</span><br><span class="line">STATIC_URL = &apos;/static/&apos;</span><br></pre></td></tr></table></figure><h6 id="7配置时区-语言"><a href="#7配置时区-语言" class="headerlink" title="7配置时区/语言"></a>7配置时区/语言</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = &apos;zh-hans&apos;</span><br><span class="line"></span><br><span class="line">TIME_ZONE = &apos;Asia/Chongqing&apos;</span><br></pre></td></tr></table></figure><h6 id="8配置url"><a href="#8配置url" class="headerlink" title="8配置url"></a>8配置url</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from cart import views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(&apos;&apos;,views.index),</span><br><span class="line">    path(&apos;add_to_cart/&lt;int:id&gt;&apos;,views.add_to_cart),</span><br><span class="line">    path(&apos;show_cart&apos;,views.show_cart),</span><br><span class="line">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h6 id="9写视图"><a href="#9写视图" class="headerlink" title="9写视图"></a>9写视图</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render</span><br><span class="line"></span><br><span class="line">def index(request):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def add_to_cart(request):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def show_cart(request):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure><h6 id="10-建立models"><a href="#10-建立models" class="headerlink" title="10 建立models"></a>10 建立models</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from django.db import models</span><br><span class="line"></span><br><span class="line">class Goods(models.Model):</span><br><span class="line">    &quot;&quot;&quot;商品模型类&quot;&quot;&quot;</span><br><span class="line">    id = models.AutoField(primary_key=True,db_column=&apos;gid&apos;)</span><br><span class="line">    name = models.CharField(max_length=50,db_column=&apos;gname&apos;)</span><br><span class="line">    price = models.DecimalField(max_digits=10,decimal_places=2,db_column=&apos;gprice&apos;)</span><br><span class="line">    image = models.CharField(max_length=255,db_column=&apos;gimage&apos;)</span><br><span class="line">    class Meta:</span><br><span class="line"></span><br><span class="line">        db_table = &apos;tb_goods&apos;</span><br><span class="line">        ordering = (&apos;id&apos;,)</span><br></pre></td></tr></table></figure><h6 id="11迁移"><a href="#11迁移" class="headerlink" title="11迁移"></a>11迁移</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations cart   </span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h6 id="12注册后台管理员账户"><a href="#12注册后台管理员账户" class="headerlink" title="12注册后台管理员账户"></a>12注册后台管理员账户</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例如:</span><br><span class="line">from django.contrib import admin</span><br><span class="line"></span><br><span class="line">from cart.models import Goods</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class GoodsAdmin(admin.ModelAdmin):</span><br><span class="line">    list_display = (&apos;id&apos;,&apos;name&apos;,&apos;price&apos;,&apos;image&apos;)</span><br><span class="line">    search_fields = (&apos;name&apos;,)</span><br><span class="line">    </span><br><span class="line">admin.site.register(Goods,GoodsAdmin)</span><br></pre></td></tr></table></figure><h6 id="13-GUANLIY"><a href="#13-GUANLIY" class="headerlink" title="13:GUANLIY"></a>13:GUANLIY</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(venv) lizhonglindeMacBook-Pro:shop lizhonglin$ python manage.py createsuperuser </span><br><span class="line">Username (leave blank to use &apos;lizhonglin&apos;): admin</span><br><span class="line">Email address: admin@126.com</span><br><span class="line">Password: </span><br><span class="line">Password (again): </span><br><span class="line">Superuser created successfully.</span><br><span class="line">(venv) lizhonglindeMacBook-Pro:shop lizhonglin$</span><br></pre></td></tr></table></figure><h6 id="14进入管理员界面查看数据"><a href="#14进入管理员界面查看数据" class="headerlink" title="14进入管理员界面查看数据"></a>14进入管理员界面查看数据</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以插入数据</span><br></pre></td></tr></table></figure><h6 id="15配置url"><a href="#15配置url" class="headerlink" title="15配置url"></a>15配置url</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置首页</span><br><span class="line">def index(request):</span><br><span class="line">    good_list = list(Goods.objects.all())</span><br><span class="line">    return render(request,&apos;goods.html&apos;,&#123;&apos;goods_list&apos;:good_list&#125;)</span><br></pre></td></tr></table></figure><h6 id="16开始在视图中定制自己的功能"><a href="#16开始在视图中定制自己的功能" class="headerlink" title="16开始在视图中定制自己的功能"></a>16开始在视图中定制自己的功能</h6>]]></content>
      
      
        <tags>
            
            <tag> cookie与session </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Web框架Django(一)</title>
      <link href="/2018/05/25/Web%E6%A1%86%E6%9E%B6Django-%E4%B8%80/"/>
      <url>/2018/05/25/Web%E6%A1%86%E6%9E%B6Django-%E4%B8%80/</url>
      <content type="html"><![CDATA[<h4 id="Web应用框架"><a href="#Web应用框架" class="headerlink" title="Web应用框架"></a>Web应用框架</h4><hr><p>Web应用框架（Web application framework）是一种开发框架，用来支持动态网站、网络应用程序及<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener">网络服务</a>的开发。其类型有基于请求的和基于组件的两种框架</p><h6 id="常见的框架有"><a href="#常见的框架有" class="headerlink" title="常见的框架有"></a>常见的框架有</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FlaskDjangoTornadoPyramidBottleWeb2pyweb.py</span><br></pre></td></tr></table></figure><h6 id="mvc架构"><a href="#mvc架构" class="headerlink" title="mvc架构"></a>mvc架构</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- model</span><br><span class="line">-- controller</span><br><span class="line">-- view</span><br><span class="line">数据和数据的解耦合</span><br><span class="line"></span><br><span class="line">MVC：模型-视图-控制器</span><br><span class="line">目标：模型（数据）和视图（显示）解耦合</span><br></pre></td></tr></table></figure><p><img src="/Users/lizhonglin/Library/Containers/com.tencent.qq/Data/Library/Caches/Images/E9A163A7E421E04FD77B1807356B447F.jpg" alt="9A163A7E421E04FD77B1807356B447"></p><p>通过控制器，将数据和显示分离，好处是同一个视图可以加载不同的模型，同一个模型也可以显示成不同的视图</p><p>稍具规模的系统都会使用MVC架构或者它的变体（MVP、MVVM等）</p><p>它是对面向对象设计原则中迪米特法则的一个最好的践行</p><h6 id="python中的的模式"><a href="#python中的的模式" class="headerlink" title="python中的的模式"></a>python中的的模式</h6><p><img src="/Users/lizhonglin/Library/Containers/com.tencent.qq/Data/Library/Caches/Images/5CAC360BC60D562BC3E621664BF9ABBB.jpg" alt="CAC360BC60D562BC3E621664BF9ABB"></p><h5 id="Windows中django操作"><a href="#Windows中django操作" class="headerlink" title="Windows中django操作"></a>Windows中django操作</h5><h6 id="1，检查python的版本"><a href="#1，检查python的版本" class="headerlink" title="1，检查python的版本"></a>1，检查python的版本</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br><span class="line">python --version</span><br></pre></td></tr></table></figure><h6 id="2，创建虚拟环境"><a href="#2，创建虚拟环境" class="headerlink" title="2，创建虚拟环境"></a>2，创建虚拟环境</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv  hello_django_venv</span><br></pre></td></tr></table></figure><h6 id="3-进入文件夹"><a href="#3-进入文件夹" class="headerlink" title="3,     进入文件夹"></a>3,     进入文件夹</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd hello_django_venv</span><br><span class="line">激活虚拟环境</span><br><span class="line">cd srcipts      </span><br><span class="line">deactivate (不激活)</span><br></pre></td></tr></table></figure><h6 id="4-安装django框架"><a href="#4-安装django框架" class="headerlink" title="4,    安装django框架"></a>4,    安装django框架</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django  版本(指定版本就加上)      &#123;==1.11   (==指定版本)&#125;</span><br></pre></td></tr></table></figure><h6 id="5-检查django的版本"><a href="#5-检查django的版本" class="headerlink" title="5,检查django的版本"></a>5,检查django的版本</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin --version</span><br></pre></td></tr></table></figure><h6 id="6-创建项目"><a href="#6-创建项目" class="headerlink" title="6, 创建项目"></a>6, 创建项目</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject hello_django</span><br></pre></td></tr></table></figure><h6 id="7-进入项目目录"><a href="#7-进入项目目录" class="headerlink" title="7,进入项目目录"></a>7,进入项目目录</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver  启动服务</span><br></pre></td></tr></table></figure><h5 id="Macos-linux下面创建django虚拟环境"><a href="#Macos-linux下面创建django虚拟环境" class="headerlink" title="Macos\linux下面创建django虚拟环境"></a>Macos\linux下面创建django虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1,mkdir hello_django     创建项目目录</span><br><span class="line">2,cd hello_django/       切换到项目目录</span><br><span class="line">3,python3 -m venv hd_venv 使用venv模块创建虚拟环境，目录名hd_venv</span><br><span class="line">4,source hd_venv/bin/activate    激活虚拟环境 </span><br><span class="line">5,python -m pip install --upgrade pip  更新pip到最新版本</span><br><span class="line">6,pip install django              使用pip安装django</span><br><span class="line">7,django-admin --version       通过安装django时安装的脚本工具django-admin检查django版本</span><br><span class="line">8,在虚拟环境下面创建项目</span><br><span class="line">django-admin startproject hello_django</span><br><span class="line">9,启动服务</span><br><span class="line">python manage.py runserver  启动服务</span><br><span class="line">    ctrl+c 停服务</span><br><span class="line">    </span><br><span class="line">10,建应用</span><br><span class="line">   python manage.py startapp hrs</span><br><span class="line">   </span><br><span class="line">11,注册功能</span><br><span class="line"># 下面的列表容器表示项目中安装了哪些应用</span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;hrs&apos;,</span><br><span class="line">    &apos;crms&apos;,</span><br><span class="line">    &apos;sysms&apos;,</span><br><span class="line">]</span><br><span class="line">12,修改view.py文件</span><br><span class="line">13,配置urls.py</span><br></pre></td></tr></table></figure><h6 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#国际化</span><br><span class="line">USE_I18N = True</span><br><span class="line">#本地化</span><br><span class="line">USE_L10N = True</span><br><span class="line"></span><br><span class="line">USE_TZ = True</span><br><span class="line"></span><br><span class="line">#保证存储到数据库中的是 UTC 时间；</span><br><span class="line">#在函数之间传递时间参数时，确保时间已经转换成 UTC 时间；</span><br></pre></td></tr></table></figure><h6 id="查看你已经更改了那个配置项"><a href="#查看你已经更改了那个配置项" class="headerlink" title="查看你已经更改了那个配置项"></a>查看你已经更改了那个配置项</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py diffsettings</span><br></pre></td></tr></table></figure><h6 id="配置网站静态资源"><a href="#配置网站静态资源" class="headerlink" title="配置网站静态资源"></a>配置网站静态资源</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = &apos;/static/&apos;   配置静态资源</span><br><span class="line"></span><br><span class="line">&#123;% load static %&#125;     加载静态资源</span><br><span class="line"></span><br><span class="line">原文:https://docs.djangoproject.com/en/2.0/howto/static-files/</span><br></pre></td></tr></table></figure><h6 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1,配置数据库</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;oa&apos;,</span><br><span class="line">        &apos;HOST&apos;:&apos;localhost&apos;,</span><br><span class="line">        &apos;PORT&apos;: &apos;3306&apos;,</span><br><span class="line">        &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;123456&apos;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2,安装依赖库</span><br><span class="line">pip install pymysql</span><br><span class="line"></span><br><span class="line">3,配置__init__</span><br></pre></td></tr></table></figure><p><img src="/var/folders/v9/jcddlqfx4tg9c57c6xvt8gyr0000gn/T/abnerworks.Typora/image-201805221001203.png" alt="mage-20180522100120"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4.执行</span><br><span class="line">python manage.py migrate  迁移工具  (可以自动建表)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">生成迁移</span><br><span class="line">python manage.py makemigrations hrs   </span><br><span class="line"></span><br><span class="line">执行迁移</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><blockquote><p>两个一对多 取代多对多</p></blockquote><h6 id="创建Django超级管理员"><a href="#创建Django超级管理员" class="headerlink" title="创建Django超级管理员"></a>创建Django超级管理员</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">^C(venv) lizhonglindeMacBook-Pro:oa lizhonglin$ python manage.py createsuperuser </span><br><span class="line">Username (leave blank to use &apos;lizhonglin&apos;): admin</span><br><span class="line">Email address: admin@126.com</span><br><span class="line">Password: </span><br><span class="line">Password (again): </span><br><span class="line">This password is too short. It must contain at least 8 characters.</span><br><span class="line">This password is too common.</span><br><span class="line">This password is entirely numeric.</span><br><span class="line">Password: </span><br><span class="line">Password (again): </span><br><span class="line">Superuser created successfully.</span><br><span class="line">(venv) lizhonglindeMacBook-Pro:oa lizhonglin$</span><br></pre></td></tr></table></figure><h6 id="注册admin-py"><a href="#注册admin-py" class="headerlink" title="注册admin.py"></a>注册admin.py</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例如:</span><br><span class="line">from django.contrib import admin</span><br><span class="line"></span><br><span class="line">from cart.models import Goods</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class GoodsAdmin(admin.ModelAdmin):</span><br><span class="line">    list_display = (&apos;id&apos;,&apos;name&apos;,&apos;price&apos;,&apos;image&apos;)</span><br><span class="line">    search_fields = (&apos;name&apos;,)</span><br><span class="line">    </span><br><span class="line">admin.site.register(Goods,GoodsAdmin)</span><br></pre></td></tr></table></figure><h6 id="项目中的shell"><a href="#项目中的shell" class="headerlink" title="项目中的shell"></a>项目中的shell</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br></pre></td></tr></table></figure><h6 id="增-删-改-查"><a href="#增-删-改-查" class="headerlink" title="增    删    改    查"></a>增    删    改    查</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">创建一个部门</span><br><span class="line">dept = Dept(no=&apos;90&apos;,name=&apos;研发二部&apos;,location=&apos;武汉&apos;)</span><br><span class="line"></span><br><span class="line">获取一个部门</span><br><span class="line">Dept.object.get(pk=20)  获取一个</span><br><span class="line"></span><br><span class="line">获取所有</span><br><span class="line">Dept.object.all()</span><br><span class="line"></span><br><span class="line">保存</span><br><span class="line">dept.save()  </span><br><span class="line"></span><br><span class="line">删除</span><br><span class="line">dept.delect()</span><br></pre></td></tr></table></figure><p>表格 :</p><table><thead><tr><th>no</th><th>name</th><th>location</th></tr></thead><tbody><tr><td>10</td><td>技术二部</td><td>武汉</td></tr><tr><td>20</td><td>行政部</td><td>成都</td></tr><tr><td>30</td><td>销售部</td><td>重庆</td></tr><tr><td>40</td><td>综合部</td><td>成都</td></tr><tr><td>60</td><td>网络部</td><td>成都</td></tr><tr><td></td><td></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell  </span><br><span class="line"></span><br><span class="line">精确查询某个部门</span><br><span class="line">Dept.objects.filter(name=&apos;行政部&apos;)</span><br><span class="line"></span><br><span class="line">模糊查询</span><br><span class="line">&gt;&gt;&gt; Dept.objects.filter(name__contains=&apos;网&apos;)</span><br><span class="line">&lt;QuerySet [&lt;Dept: 网络部&gt;]&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line"></span><br><span class="line">忽略大小写模糊查询</span><br><span class="line">&gt;&gt;&gt; Dept.objects.filter(name__icontains=&apos;网&apos;)</span><br><span class="line"></span><br><span class="line">查询大于30的部门</span><br><span class="line">&gt;&gt;&gt; Dept.objects.filter(no__gt=30)</span><br><span class="line">&lt;QuerySet [&lt;Dept: 综合部&gt;, &lt;Dept: 网络部&gt;]&gt;</span><br><span class="line"></span><br><span class="line">查询到大于等于30的部门</span><br><span class="line">&gt;&gt;&gt; Dept.objects.filter(no__gte=30)</span><br><span class="line">&lt;QuerySet [&lt;Dept: 销售部&gt;, &lt;Dept: 综合部&gt;, &lt;Dept: 网络部&gt;]&gt;</span><br><span class="line"></span><br><span class="line">倒叙查询所有</span><br><span class="line">&gt;&gt;&gt; Dept.objects.all().order_by(&apos;-no&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">切片查询</span><br><span class="line">&gt;&gt;&gt; Dept.objects.all().order_by(&apos;no&apos;)[0:3]</span><br><span class="line">&lt;QuerySet [&lt;Dept: 技术二部&gt;, &lt;Dept: 行政部&gt;, &lt;Dept: 销售部&gt;]&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line"></span><br><span class="line">原始查询</span><br><span class="line">&gt;&gt;&gt; Dept.objects.raw(&apos;select name from tb_dept&apos;)</span><br><span class="line">&lt;RawQuerySet: select name from tb_dept&gt;</span><br><span class="line"></span><br><span class="line">查询小于30的部门</span><br><span class="line">&gt;&gt;&gt; Dept.objects.filter(no__lt=30)</span><br><span class="line">&lt;QuerySet [&lt;Dept: 技术二部&gt;, &lt;Dept: 行政部&gt;]&gt;</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line"></span><br><span class="line">删除部门</span><br><span class="line">&gt;&gt;&gt; Dept.object.get(pk=30).delect()</span><br></pre></td></tr></table></figure><h6 id="django配置日志"><a href="#django配置日志" class="headerlink" title="django配置日志"></a>django配置日志</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#配置日志输出到控制台</span><br><span class="line"></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    &apos;version&apos;: 1,</span><br><span class="line">    &apos;disable_existing_loggers&apos;: False,</span><br><span class="line">    &apos;handlers&apos;: &#123;</span><br><span class="line">        &apos;console&apos;: &#123;</span><br><span class="line">            &apos;class&apos;: &apos;logging.StreamHandler&apos;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &apos;loggers&apos;: &#123;</span><br><span class="line">        &apos;django&apos;: &#123;</span><br><span class="line">            &apos;handlers&apos;: [&apos;console&apos;],</span><br><span class="line">            &apos;level&apos;: os.getenv(&apos;DJANGO_LOG_LEVEL&apos;, &apos;DEBUG&apos;),</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="request"><a href="#request" class="headerlink" title="request"></a>request</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request.META     获取请求头的东西和本机的东西</span><br><span class="line">request.POST</span><br><span class="line">request.GET      获取使用GET请求的参数</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">查询这个部门的所有员工</span><br><span class="line"></span><br><span class="line">1, Emp.objects.filter(dept__no=no) </span><br><span class="line"></span><br><span class="line">反向查询</span><br><span class="line">先查询部门在查部门的员工 建表的时候可以加在ForeignKey中related_name </span><br><span class="line">related_name=&quot;+&quot; 阻止反向查询</span><br><span class="line">2, Dept.object.filter(no=no).emp_set.all()  </span><br><span class="line"></span><br><span class="line">3 .select_related(&apos;dept&apos;)</span><br></pre></td></tr></table></figure><h6 id="QuerySet知识点"><a href="#QuerySet知识点" class="headerlink" title="QuerySet知识点"></a>QuerySet知识点</h6><p>QuerySet 使用的是惰性查询  ===如果不是非要取数据的时候就不会去取数据,要用到数据的时候才会去取数据.这样做是为了节省服务器的内存开销(延迟开销)   节省空间的—消耗时间</p><p>数据量大的时候先:筛选—排序—切片 .select_related</p><blockquote><p>写程序要尽量避免硬代码\硬编码</p></blockquote><h6 id="配置URL"><a href="#配置URL" class="headerlink" title="配置URL"></a>配置URL</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">django1.x版本</span><br><span class="line">命名捕获组 URL(&apos;emps/(?P&lt;NAME&gt;[0-9]+)&apos;,views.emps</span><br><span class="line"></span><br><span class="line">diango2.x版本</span><br><span class="line">path(&apos;emps/&lt;int:no&gt;&apos;,views.emps,name=&apos;empsindept&apos;),</span><br></pre></td></tr></table></figure><hr><h5 id="未完待续………"><a href="#未完待续………" class="headerlink" title="未完待续……….."></a>未完待续………..</h5><hr>]]></content>
      
      
        <tags>
            
            <tag> Django学习笔记(一) </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS学习笔记</title>
      <link href="/2018/05/25/CentOS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/05/25/CentOS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="CentOS笔记"><a href="#CentOS笔记" class="headerlink" title="CentOS笔记"></a>CentOS笔记</h3><p>CentOS（Community Enterprise Operating System，中文意思是：社区企业操作系统）是Linux发行版之一，它是来自于Red Hat Enterprise Linux依照<a href="https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81" target="_blank" rel="noopener">开放源代码</a>规定释出的源代码所编译而成。由于出自同样的<a href="https://baike.baidu.com/item/%E6%BA%90%E4%BB%A3%E7%A0%81" target="_blank" rel="noopener">源代码</a>，因此有些要求高度稳定性的<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">服务器</a>以CentOS替代商业版的<a href="https://baike.baidu.com/item/Red%20Hat" target="_blank" rel="noopener">Red Hat</a> Enterprise Linux使用。两者的不同，在于CentOS并不包含封闭源代码软件。</p><hr><p>&lt;&lt;计算机文化&gt;&gt;  —学习计算机基础概念</p><hr><h5 id="Linux发行版本"><a href="#Linux发行版本" class="headerlink" title="Linux发行版本"></a>Linux发行版本</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Redhat Linux </span><br><span class="line">Ubuntu</span><br><span class="line">CentOS</span><br></pre></td></tr></table></figure><h5 id="macOS软件连接"><a href="#macOS软件连接" class="headerlink" title="macOS软件连接"></a>macOS软件连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mac</span><br><span class="line">http://xclient.info/?t=cf45be83ba9e7cbc54b5a457f912356b56190ed7</span><br></pre></td></tr></table></figure><h5 id="阿里云远程登录报错解决办法"><a href="#阿里云远程登录报错解决办法" class="headerlink" title="阿里云远程登录报错解决办法"></a>阿里云远程登录报错解决办法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class="line">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span><br><span class="line">It is also possible that a host key has just been changed.</span><br><span class="line">The fingerprint for the RSA key sent by the remote host is</span><br><span class="line">SHA256:37dpXib6L1tiX7BJUdo+oYFQLlGCllIjWo9n/czvRH8.</span><br><span class="line">Please contact your system administrator.</span><br><span class="line">Add correct host key in /Users/lizhonglin/.ssh/known_hosts to get rid of this message.</span><br><span class="line">Offending RSA key in /Users/lizhonglin/.ssh/known_hosts:2</span><br><span class="line">RSA host key for 47.104.85.246 has changed and you have requested strict checking.</span><br><span class="line">Host key verification failed.</span><br><span class="line"></span><br><span class="line">[进程已完成]</span><br></pre></td></tr></table></figure><blockquote><p>解决方法：</p><p>vi ~/.ssh/known_hosts 在本地机器删除对应的密钥信息</p><p>方法一：<br>rm -rf ~/.ssh/known_hosts</p><hr><p>优点：干净利索<br>缺点：把其他正确的公钥信息也删除，下次链接要全部重新经过认证</p><p>方法二：<br>vi ~/.ssh/known_hosts<br>删除对应ip的相关rsa信息（本例可知删除53行信息即可）</p><hr><p>优点：其他正确的公钥信息保留<br>缺点：还要vi，还要找到对应信息，稍微优点繁琐</p><p>方法三：<br>清除旧的公钥信息<br>ssh-keygen -R 192.168.0.100</p><hr><p>优点：快、稳、狠<br>缺点：没有缺点</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh登陆出现警告：</span><br><span class="line">ssh登录，permission denied(publickey.gssapi-with-mic)</span><br><span class="line">用ssh登录Linux，出现permission denied(publickey.gssapi-with-mic.password)错误。</span><br><span class="line">解决方法：</span><br><span class="line">修改/etc/ssh/sshd_config文件，PasswordAuthentication no修改为yes</span><br></pre></td></tr></table></figure><h5 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">www.kernel.org  linux 内核下载地址 --&gt;参考-- minix(教学)  </span><br><span class="line">who /w 查询哪些用户登录呢系统/ 显示跟详细</span><br><span class="line">clear清屏</span><br><span class="line">ps 查看shell版本</span><br><span class="line"></span><br><span class="line">adduser 用户名     创建用户</span><br><span class="line">passwd  用户名     创建用户密码 (如果直接回车改当前用户密码/跟上用户名是修改用户名的密码)</span><br><span class="line"></span><br><span class="line">whoami /who am i 查看自己是谁</span><br><span class="line"></span><br><span class="line">logout /exit   登出账户</span><br><span class="line"></span><br><span class="line">shutdown /init 0  关闭服务器</span><br><span class="line">reboot /init 6   重启服务器</span><br><span class="line"></span><br><span class="line">uname  查看自己用的什么系统</span><br><span class="line">hostname  查看主机名</span><br><span class="line">userdel    删除用户</span><br><span class="line">wall  警告</span><br><span class="line">敲两下tab键 可以查看当前能使用过的命令数</span><br><span class="line"></span><br><span class="line">man /info(更详细更专业)   查看命名的使用手册 (按q退出 按h是帮助)</span><br><span class="line">pass --help   获取命令帮助信息</span><br><span class="line">显示太长可以加上|    例如:pass --help |less </span><br><span class="line">whatis passwd  获取简短帮助</span><br><span class="line">which python    查找命令在哪里</span><br><span class="line">whereis python  查找命令在哪里</span><br><span class="line"></span><br><span class="line">pwd 显示当前的目录路径</span><br><span class="line"></span><br><span class="line">查看历史命令    history   使用!编号就可以调取</span><br><span class="line">echo  回声命令   </span><br><span class="line">echo $HISTSIZE   查看系统输入的命令历史记录</span><br><span class="line">sodu  以管理员权限做某些事情</span><br><span class="line">ssh 用户名@ip </span><br><span class="line">scp  安全拷贝</span><br></pre></td></tr></table></figure><h5 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su 切换用户</span><br><span class="line">etc  配置目录</span><br><span class="line">usr  用户目录</span><br><span class="line">home 用户家目录</span><br></pre></td></tr></table></figure><h5 id="操作文件和文件夹"><a href="#操作文件和文件夹" class="headerlink" title="操作文件和文件夹"></a>操作文件和文件夹</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">touch  创建文件 (如果文件存在会修改文件的最后访问时间)</span><br><span class="line">ls -l   查看长格式</span><br><span class="line">ls -a   查看所有文件</span><br><span class="line">ls      列出所有文件</span><br><span class="line">ls -la  长格式查看全部文件</span><br><span class="line">ls -r   反转顺序</span><br><span class="line">ls -R  递归显示目录</span><br><span class="line"></span><br><span class="line">cd abc/foo</span><br><span class="line">cd ../..</span><br><span class="line">cd ~</span><br><span class="line">rm  remove  既可以删文件又可以删除文件</span><br><span class="line">rm -rf / 慎用</span><br></pre></td></tr></table></figure><h5 id="常用操作命令"><a href="#常用操作命令" class="headerlink" title="常用操作命令"></a>常用操作命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">history   可以查看当天的历史命令(使用!编号就可以把命令在执行一遍)</span><br><span class="line">cp ----copy 复制文件</span><br><span class="line">mv ---move 剪切移动</span><br><span class="line">cat /head/tail 查看文件内容</span><br><span class="line">cat index.html | more/less  分页查看文件内容</span><br><span class="line">head -5 index.html   查看5行内容</span><br><span class="line">tail -2 index.html   查看最后2两行</span><br><span class="line">cat index.html | grep &apos;&lt;div&gt;&apos; 查询文件中指定的内容</span><br><span class="line">grep &apos;&lt;div&gt;&apos; index.html  也可以这样搜索</span><br><span class="line">grep &apos;&lt;div&gt;&apos; index.html -n  查询多少行有这个对应的数据</span><br><span class="line">grep &apos;&lt;div&gt;&apos; / -R -n  &amp; 让命令在后台执行</span><br><span class="line">grep &apos;&lt;div&gt;&apos; / -R -n &gt; result.txt &amp; 命令在后台执行 并且重新执行</span><br><span class="line">grep &apos;&lt;div&gt;&apos; / -R -n &gt; result.txt  2&gt; error.txt &amp;  错误重定向</span><br><span class="line">&amp; 在后台执行</span><br><span class="line"></span><br><span class="line">&gt;是输出重定向</span><br><span class="line">2&gt; 执行命令错误了 在行另外一个文件</span><br><span class="line">&gt;&gt; 追加输出重定向</span><br><span class="line">输入重定向用&lt;</span><br><span class="line"></span><br><span class="line">jobs 可以查看后台有没有任务在执行</span><br><span class="line">fg %1把任务拿前台来执行</span><br><span class="line">bg %1   在次把任务拿到后台执行</span><br><span class="line">top     查看cpu的占用率</span><br><span class="line">grep 搜文件内容中 </span><br><span class="line">wc  数行数和单词数</span><br><span class="line">uniq 去掉相邻的重复的内容</span><br><span class="line">sort 对内容排序(返回修改后的列表,不改变文件的内容)</span><br><span class="line">diff 版本比较两个文件的内容</span><br><span class="line">file 分析文件的性质(根据文件里面数据的特征值来分析)</span><br><span class="line"></span><br><span class="line">find 查找文件 </span><br><span class="line">ctrl+c     终止一个命令的执行</span><br></pre></td></tr></table></figure><h5 id="远程拷贝文件"><a href="#远程拷贝文件" class="headerlink" title="远程拷贝文件"></a>远程拷贝文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ssh  用户名@ip </span><br><span class="line"></span><br><span class="line">scp he hellokitty@120.77.222.217:/home/hellokitty/</span><br><span class="line"></span><br><span class="line">CentOS:</span><br><span class="line">cat /etc/centos-release  查看操作系统版本</span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# cat /etc/centos-release</span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]#</span><br></pre></td></tr></table></figure><h5 id="创建硬链接-软链接"><a href="#创建硬链接-软链接" class="headerlink" title="创建硬链接/软链接"></a>创建硬链接/软链接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln filename 目录   创建硬链接</span><br><span class="line"></span><br><span class="line">ln -s  /etc/e.txt  filename    创建软连接相当于windows下面的快捷方式.</span><br><span class="line">ln -s ~/guess.py  /usr/bin/guess   创建软链接</span><br></pre></td></tr></table></figure><h5 id="redis下载地址"><a href="#redis下载地址" class="headerlink" title="redis下载地址"></a>redis下载地址</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis.io</span><br><span class="line">http://download.redis.io/releases/redis-3.2.11.tar.gz</span><br></pre></td></tr></table></figure><h5 id="下载文件的压缩-解压缩-归档-解归档"><a href="#下载文件的压缩-解压缩-归档-解归档" class="headerlink" title="下载文件的压缩/解压缩/归档/解归档"></a>下载文件的压缩/解压缩/归档/解归档</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">解压缩</span><br><span class="line"></span><br><span class="line">后缀为gz的</span><br><span class="line">gzip   文件    压缩</span><br><span class="line">gunzip  文件名      解压文件   -v 可以看见详细的解压过程</span><br><span class="line"></span><br><span class="line">后缀为xz的</span><br><span class="line">xz -z</span><br><span class="line">xz -d</span><br><span class="line">xz -z -9  压缩比</span><br><span class="line"></span><br><span class="line">解归档</span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# tar -xvf redis-3.2.11.tar</span><br><span class="line"></span><br><span class="line">归档</span><br><span class="line">tar -cvf all.tar *  *表示归档当前目录所有文件</span><br><span class="line">tar -xvf all.tar   解归档</span><br></pre></td></tr></table></figure><h5 id="别名-和-反别名"><a href="#别名-和-反别名" class="headerlink" title="别名 和 反别名"></a>别名 和 反别名</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias ll= 'ls -l'    定制别名</span><br><span class="line"></span><br><span class="line">unalias ll     反别名</span><br></pre></td></tr></table></figure><h5 id="vim使用"><a href="#vim使用" class="headerlink" title="vim使用"></a>vim使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">syntax off  关闭高亮语法</span><br><span class="line">syntax no 开启</span><br><span class="line">set ts = 4  设置tap键 为4个空格</span><br><span class="line">修改vim配置文件:</span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# vim .vimrc</span><br><span class="line"></span><br><span class="line">!v 可以打开刚才执行过以v开头的在执行一遍</span><br><span class="line">ming</span><br><span class="line"></span><br><span class="line">在末行模式下面要执行系统命令可以</span><br><span class="line">! 命令</span><br><span class="line">要回vim  按回车</span><br><span class="line"></span><br><span class="line">在末行模式:</span><br><span class="line">:inoremap pymain if __name__ == &apos;__main__&apos;:  </span><br><span class="line"></span><br><span class="line">命令模式输入</span><br><span class="line">/  可以做搜索    n 向下搜索   N向上搜索</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">排版</span><br><span class="line">.center() 字符串居中</span><br><span class="line">rjust()  右对齐</span><br><span class="line">ljust()   左对齐</span><br></pre></td></tr></table></figure><h5 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x,g+x,O+x 文件   修改文件的权限</span><br><span class="line">chomd 777 读写执行</span><br><span class="line">      744 只读</span><br><span class="line">      766 读写</span><br><span class="line">      555 读执行</span><br></pre></td></tr></table></figure><h5 id="升级python3"><a href="#升级python3" class="headerlink" title="升级python3"></a>升级python3</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">原文地址:https://blog.csdn.net/jackfrued/article/details/79380979</span><br><span class="line"></span><br><span class="line">1.wget  https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz</span><br><span class="line">2.xz -d Python-3.6.5.tar.xz</span><br><span class="line">3.tar -xvf Python-3.6.5.tar</span><br><span class="line">**4.yum install gcc</span><br><span class="line">5.cd Python-3.6.5</span><br><span class="line">6. ./configure --prefix=/usr/local/python36 --enable-optimizations</span><br><span class="line">7. 编译:make &amp;&amp; make install   (&amp;&amp;表示执行完前面的命令在执行后面的) 这步错了执行以下</span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span><br><span class="line"></span><br><span class="line">8. ln -s /usr/local/python3.6/bin/python3 /usr/bin/python3</span><br></pre></td></tr></table></figure><h6 id="预习"><a href="#预习" class="headerlink" title="预习"></a>预习</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NginX   Web服务器</span><br><span class="line">MySQL   关系型数据库  -持久化</span><br><span class="line">Redis   非关系型数据库</span><br><span class="line"></span><br><span class="line">防火墙   iptables/firewall</span><br><span class="line"></span><br><span class="line">[] -第二大的元素找出来</span><br><span class="line">['','',''] -重复次数排前三的找出来</span><br></pre></td></tr></table></figure><h6 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pip3 install  pycodestyle  python代码规范检查</span><br><span class="line"></span><br><span class="line">升级pip:</span><br><span class="line"> [root@izm5eifctth7468z9e6fz0z ~]# pip3 install --upgrade pip</span><br><span class="line"> </span><br><span class="line"> jupyter notebook</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> sys.argv  python接收系统传给的参数包括系统本身</span><br></pre></td></tr></table></figure><h4 id="linux-安装软件"><a href="#linux-安装软件" class="headerlink" title="linux 安装软件"></a>linux 安装软件</h4><h6 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum   yellowdog updater modified</span><br><span class="line">rpm   redhat package  manager</span><br></pre></td></tr></table></figure><h6 id="yum的使用"><a href="#yum的使用" class="headerlink" title="yum的使用"></a>yum的使用</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list installed  检查安装了哪些软件</span><br><span class="line"> yum search  nginx   看看是否有安装资源</span><br><span class="line"> yum makecache</span><br></pre></td></tr></table></figure><h6 id="常用的web架构"><a href="#常用的web架构" class="headerlink" title="常用的web架构"></a>常用的web架构</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LAMP   = Linux + Apache + MySQL + PHP</span><br><span class="line">  Linux + Nginx + MySQL + Python</span><br></pre></td></tr></table></figure><h6 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n   查看端口状态</span><br><span class="line"></span><br><span class="line">nginx:首页位置</span><br><span class="line"> /usr/share/nginx/html.</span><br><span class="line"> </span><br><span class="line">编辑配置文件</span><br><span class="line"> /etc/nginx/nginx.conf.</span><br><span class="line"> </span><br><span class="line">nginx -s stop 停了</span><br><span class="line"></span><br><span class="line">启动</span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line">Nginx的启动(start),停止(stop)命令</span><br><span class="line">查看Nginx的版本号：nginx -V</span><br><span class="line"></span><br><span class="line">启动Nginx：start nginx</span><br><span class="line"></span><br><span class="line">快速停止或关闭Nginx：nginx -s stop</span><br><span class="line"></span><br><span class="line">正常停止或关闭Nginx：nginx -s quit</span><br></pre></td></tr></table></figure><h6 id="sftp操作"><a href="#sftp操作" class="headerlink" title="sftp操作"></a>sftp操作</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">命令:sftp root@ip </span><br><span class="line"></span><br><span class="line">lizhonglindeMacBook-Pro:~ lizhonglin$ sftp root@47.104.205.141 </span><br><span class="line">root@47.104.205.141's password: </span><br><span class="line">Permission denied, please try again.</span><br><span class="line">root@47.104.205.141's password: </span><br><span class="line">Connected to 47.104.205.141.</span><br><span class="line"><span class="meta">sftp&gt;</span> ls</span><br><span class="line">Python-3.6.5        Python-3.6.5.tar    abc                 homework01.py       </span><br><span class="line">homework02.py       homework03.py       homework04.py       homewrok03.py       </span><br><span class="line">in.html             index.html          redis-3.2.11        redis-3.2.11.tar    </span><br><span class="line">two.py              </span><br><span class="line"><span class="meta">sftp&gt;</span> cd /usr/share/html</span><br><span class="line">Couldn't stat remote file: No such file or directory</span><br><span class="line"><span class="meta">sftp&gt;</span> cd /usr/share/nginx/html</span><br><span class="line"><span class="meta">sftp&gt;</span> ls</span><br><span class="line">404.html        50x.html        index.html      nginx-logo.png  poweredby.png   </span><br><span class="line"><span class="meta">sftp&gt;</span> get 上传</span><br><span class="line">put 上传</span><br><span class="line"></span><br><span class="line">查看进程</span><br><span class="line">ps -ef </span><br><span class="line">ps -aux </span><br><span class="line"></span><br><span class="line">查看网络状态并且能看见进程号</span><br><span class="line">netstat -nap </span><br><span class="line"></span><br><span class="line">杀进程</span><br><span class="line">kill  进程号</span><br><span class="line"></span><br><span class="line">yum配置</span><br><span class="line"> /etc/yum.repos.d/</span><br><span class="line">拷贝其他两个文件</span><br><span class="line"> </span><br><span class="line">修改后用</span><br><span class="line"> yum makecache</span><br></pre></td></tr></table></figure><h6 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh   安装   </span><br><span class="line">rpm -e     移除</span><br><span class="line"></span><br><span class="line">rpm -qa | grep 包    查询软件是否安装过</span><br><span class="line"></span><br><span class="line">rpm -qa | grep jdk | xargs rpm -e  查询后再删除(xargs:前面的搜索结果当成参数使用)</span><br></pre></td></tr></table></figure><h6 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Mariadb:</span><br><span class="line">yum install mariadb-server mariadb    安装服务器和客户端</span><br><span class="line"></span><br><span class="line">systemctl  start mariadb        7以下低版本的是  service  服务名 start</span><br><span class="line">           stop                         停服务        chkconfig </span><br><span class="line">           restart</span><br><span class="line">           </span><br><span class="line">systemctl status mariadb   查看服务是否启动</span><br><span class="line"></span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# mysql -u root -p  连接mysql</span><br><span class="line"></span><br><span class="line">firewall-cmd   --add-port=80/tcp --permanent --zone=public  配置防火墙</span><br><span class="line"></span><br><span class="line">设置开机自启:</span><br><span class="line"></span><br><span class="line">system enable mariadb    开机自启</span><br><span class="line"></span><br><span class="line">system disenble mariadb  取消开机自启</span><br></pre></td></tr></table></figure><h6 id="redis安装"><a href="#redis安装" class="headerlink" title="redis安装"></a>redis安装</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">解压文件</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">redis.conf 先备份到商机目录 原文件不要动</span><br><span class="line"></span><br><span class="line">61行 改成自己的内网地址  </span><br><span class="line"></span><br><span class="line">80行 port 端口号  可以修改或者不该    6379 merz</span><br><span class="line"></span><br><span class="line">480行   require    480 requirepass 密码</span><br><span class="line"></span><br><span class="line">redis-server myredis.conf  启动服务</span><br><span class="line">ctrl+c  结束</span><br><span class="line">kill 进程号   没存盘\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在后台运行</span><br><span class="line"></span><br><span class="line">redis-server myredis.conf &gt; myredis.log &amp;</span><br><span class="line"></span><br><span class="line">jobs  fg %1      %后台编号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# redis-server myredis.conf</span><br><span class="line">                _._</span><br><span class="line">           _.-``__ ''-._</span><br><span class="line">      _.-``    `.  `_.  ''-._           Redis 3.2.11 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ ''-._</span><br><span class="line"> (    '      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="line"> |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379</span><br><span class="line"> |    `-._   `._    /     _.-'    |     PID: 11259</span><br><span class="line">  `-._    `-._  `-./  _.-'    _.-'</span><br><span class="line"> |`-._`-._    `-.__.-'    _.-'_.-'|</span><br><span class="line"> |    `-._`-._        _.-'_.-'    |           http://redis.io</span><br><span class="line">  `-._    `-._`-.__.-'_.-'    _.-'</span><br><span class="line"> |`-._`-._    `-.__.-'    _.-'_.-'|</span><br><span class="line"> |    `-._`-._        _.-'_.-'    |</span><br><span class="line">  `-._    `-._`-.__.-'_.-'    _.-'</span><br><span class="line">      `-._    `-.__.-'    _.-'</span><br><span class="line">          `-._        _.-'</span><br><span class="line">              `-.__.-'</span><br><span class="line">              </span><br><span class="line">              </span><br><span class="line">连接服务器:</span><br><span class="line"></span><br><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# redis-cli -h 172.31.219.49 -p 6379</span><br><span class="line"></span><br><span class="line">172.31.219.49:6379&gt; auth 密码</span><br></pre></td></tr></table></figure><h6 id="免安装的软件"><a href="#免安装的软件" class="headerlink" title="免安装的软件"></a>免安装的软件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.export  $PATH=         只能一次有效</span><br><span class="line"></span><br><span class="line">2.修改环境变量 .bash_profile</span><br><span class="line">3.修改变量别名   .bashrc</span><br><span class="line"></span><br><span class="line">4.运行:</span><br><span class="line">python3 -m IPython</span><br></pre></td></tr></table></figure><h6 id="firewall-使用方法"><a href="#firewall-使用方法" class="headerlink" title="firewall 使用方法"></a>firewall 使用方法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">centos7下Firewall使用详解</span><br><span class="line">安装它，只需</span><br><span class="line"></span><br><span class="line"># yum install firewalld</span><br><span class="line">如果需要图形界面的话，则再安装</span><br><span class="line"># yum install firewall-config</span><br><span class="line"></span><br><span class="line">一、介绍</span><br><span class="line"></span><br><span class="line">防火墙守护 firewalld 服务引入了一个信任级别的概念来管理与之相关联的连接与接口。它支持 ipv4 与 ipv6，并支持网桥，采用 firewall-cmd (command) 或 firewall-config (gui) 来动态的管理 kernel netfilter 的临时或永久的接口规则，并实时生效而无需重启服务。</span><br><span class="line"></span><br><span class="line">Firewall 能将不同的网络连接归类到不同的信任级别，Zone 提供了以下几个级别</span><br><span class="line"></span><br><span class="line">drop: 丢弃所有进入的包，而不给出任何响应</span><br><span class="line">block: 拒绝所有外部发起的连接，允许内部发起的连接</span><br><span class="line">public: 允许指定的进入连接</span><br><span class="line">external: 同上，对伪装的进入连接，一般用于路由转发</span><br><span class="line">dmz: 允许受限制的进入连接</span><br><span class="line">work: 允许受信任的计算机被限制的进入连接，类似 workgroup</span><br><span class="line">home: 同上，类似 homegroup</span><br><span class="line">internal: 同上，范围针对所有互联网用户</span><br><span class="line">trusted: 信任所有连接</span><br><span class="line"></span><br><span class="line">二、使用方法</span><br><span class="line"></span><br><span class="line"># systemctl start firewalld # 启动,</span><br><span class="line"># systemctl enable firewalld # 开机启动</span><br><span class="line"># systemctl stop firewalld # 关闭</span><br><span class="line"># systemctl disable firewalld # 取消开机启动</span><br><span class="line">具体的规则管理，可以使用 firewall-cmd，具体的使用方法可以</span><br><span class="line"></span><br><span class="line">$ firewall-cmd --help</span><br><span class="line">1. 查看规则</span><br><span class="line"></span><br><span class="line">查看运行状态</span><br><span class="line">$ firewall-cmd --state</span><br><span class="line">查看已被激活的 Zone 信息</span><br><span class="line">$ firewall-cmd --get-active-zones</span><br><span class="line">public</span><br><span class="line">interfaces: eth0 eth1</span><br><span class="line">查看指定接口的 Zone 信息</span><br><span class="line">$ firewall-cmd --get-zone-of-interface=eth0</span><br><span class="line">public</span><br><span class="line">查看指定级别的接口</span><br><span class="line">$ firewall-cmd --zone=public --list-interfaces</span><br><span class="line">eth0</span><br><span class="line">查看指定级别的所有信息，譬如 public</span><br><span class="line">$ firewall-cmd --zone=public --list-all</span><br><span class="line">public (default, active)</span><br><span class="line">interfaces: eth0</span><br><span class="line">sources:</span><br><span class="line">services: dhcpv6-client http ssh</span><br><span class="line">ports:</span><br><span class="line">masquerade: no</span><br><span class="line">forward-ports:</span><br><span class="line">icmp-blocks:</span><br><span class="line">rich rules:</span><br><span class="line">查看所有级别被允许的信息</span><br><span class="line">$ firewall-cmd --get-service</span><br><span class="line">查看重启后所有 Zones 级别中被允许的服务，即永久放行的服务</span><br><span class="line">$ firewall-cmd --get-service --permanent</span><br><span class="line"></span><br><span class="line">2. 管理规则</span><br><span class="line"></span><br><span class="line"># firewall-cmd --panic-on # 丢弃</span><br><span class="line"># firewall-cmd --panic-off # 取消丢弃</span><br><span class="line">$ firewall-cmd --query-panic # 查看丢弃状态</span><br><span class="line"># firewall-cmd --reload # 更新规则，不重启服务</span><br><span class="line"># firewall-cmd --complete-reload # 更新规则，重启服务</span><br><span class="line">添加某接口至某信任等级，譬如添加 eth0 至 public，再永久生效</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=public --add-interface=eth0 --permanent</span><br><span class="line">设置 public 为默认的信任级别</span><br><span class="line"></span><br><span class="line"># firewall-cmd --set-default-zone=public</span><br><span class="line">a. 管理端口</span><br><span class="line">列出 dmz 级别的被允许的进入端口</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zome=dmz --list-ports</span><br><span class="line">允许 tcp 端口 8080 至 dmz 级别</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=dmz --add-port=8080/tcp</span><br><span class="line">允许某范围的 udp 端口至 public 级别，并永久生效</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zome=public --add-port=5060-5059/udp --permanent</span><br><span class="line">b. 管理服务</span><br><span class="line">添加 smtp 服务至 work zone</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=work --add-service=smtp</span><br><span class="line">移除 work zone 中的 smtp 服务</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=work --remove-service=smtp</span><br><span class="line">c. 配置 ip 地址伪装</span><br><span class="line">查看</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --query-masquerade</span><br><span class="line">打开伪装</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --add-masquerade</span><br><span class="line">关闭伪装</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --remove-masquerade</span><br><span class="line">d. 端口转发</span><br><span class="line">要打开端口转发，则需要先</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --add-masquerade</span><br><span class="line">然后转发 tcp 22 端口至 3753</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --add-forward-port=port=22:proto=tcp:toport=3753</span><br><span class="line">转发 22 端口数据至另一个 ip 的相同端口上</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --add-forward-port=port=22:proto=tcp:toaddr=192.168.1.100</span><br><span class="line">转发 22 端口数据至另一 ip 的 2055 端口上</span><br><span class="line"></span><br><span class="line"># firewall-cmd --zone=external --add-forward-port=port=22:proto=tcp:toport=2055:toaddr=192.168.1.100</span><br><span class="line">以上都是一些常用方法，更多高级方法，请参考：</span><br><span class="line">https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html</span><br><span class="line">https://fedoraproject.org/wiki/FirewallD</span><br></pre></td></tr></table></figure><h6 id="jupyter-配置文件链接"><a href="#jupyter-配置文件链接" class="headerlink" title="jupyter 配置文件链接"></a>jupyter 配置文件链接</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/lizhonglin/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python中的SQL注射攻击</title>
      <link href="/2018/05/17/Python%E4%B8%AD%E7%9A%84SQL%E6%B3%A8%E5%B0%84%E6%94%BB%E5%87%BB/"/>
      <url>/2018/05/17/Python%E4%B8%AD%E7%9A%84SQL%E6%B3%A8%E5%B0%84%E6%94%BB%E5%87%BB/</url>
      <content type="html"><![CDATA[<h5 id="SQL注射攻击"><a href="#SQL注射攻击" class="headerlink" title="SQL注射攻击"></a>SQL注射攻击</h5><p>​    所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。 [1]  比如先前的很多影视网站泄露VIP会员密码大多就是通过WEB表单递交查询字符暴出的，这类表单特别容易受到SQL注入式攻击．</p><h6 id="演示一下什么是sql注入"><a href="#演示一下什么是sql注入" class="headerlink" title="演示一下什么是sql注入"></a>演示一下什么是sql注入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 创建用户表</span><br><span class="line">create table tb_user</span><br><span class="line">(</span><br><span class="line">username varchar(20) not null,</span><br><span class="line">userpass varchar(20) not null</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 插入用户账号</span><br><span class="line">insert into tb_user values (&apos;admin&apos;,&apos;1q23&apos;);</span><br></pre></td></tr></table></figure><h6 id="Python-代码"><a href="#Python-代码" class="headerlink" title="Python 代码"></a>Python 代码</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    config =&#123;</span><br><span class="line">        <span class="string">'host'</span> : <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'user'</span> : <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'passwd'</span> :<span class="string">'123456'</span>,</span><br><span class="line">        <span class="string">'db'</span> : <span class="string">'hrs'</span>,</span><br><span class="line">        <span class="string">'charset'</span> : <span class="string">'utf8'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#连接数据库</span></span><br><span class="line">    conn = pymysql.connect(**config)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            user = input(<span class="string">'请输入用户名:'</span>)</span><br><span class="line">            passwd = input(<span class="string">'请输入密码:'</span>)</span><br><span class="line">            <span class="comment">#写sql语句尽量不要使用这种方法,容易被SQL注射攻击</span></span><br><span class="line">            <span class="comment">#查询用户名密码是否与数据库匹配</span></span><br><span class="line">            sql = <span class="string">"select 'x' from tb_user where username='%s' and userpass='%s'"</span> %(user,passwd)</span><br><span class="line">   <span class="comment">#判断是否有内容</span></span><br><span class="line">            <span class="keyword">if</span> cursor.execute(sql)&gt;<span class="number">0</span>:</span><br><span class="line">                print(<span class="string">'登录成功'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'用户名或密码不正确'</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h6 id="如何绕过登录验证"><a href="#如何绕过登录验证" class="headerlink" title="如何绕过登录验证"></a>如何绕过登录验证</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入用户名:admin</span><br><span class="line">请输入密码:&apos; or &apos;1&apos;=&apos;1  或者 a&apos; or &apos;2&apos;&gt;&apos;1   ##就能绕过密码检测登录成功.</span><br><span class="line">登录成功</span><br></pre></td></tr></table></figure><h6 id="Python写代码如何避免问题"><a href="#Python写代码如何避免问题" class="headerlink" title="Python写代码如何避免问题"></a>Python写代码如何避免问题</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##代码可以改造为这样就能避免SQL注射攻击:</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    config =&#123;</span><br><span class="line">        <span class="string">'host'</span> : <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'user'</span> : <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'passwd'</span> :<span class="string">'123456'</span>,</span><br><span class="line">        <span class="string">'db'</span> : <span class="string">'hrs'</span>,</span><br><span class="line">        <span class="string">'charset'</span> : <span class="string">'utf8'</span>,</span><br><span class="line">        <span class="string">'cursorclass'</span> : pymysql.cursors.DictCursor</span><br><span class="line">    &#125;</span><br><span class="line">    conn = pymysql.connect(**config)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            user = input(<span class="string">'请输入用户名:'</span>)</span><br><span class="line">            passwd = input(<span class="string">'请输入密码:'</span>)</span><br><span class="line">            <span class="comment"># sql = 'select "x" from tb_user where username="%s" and userpass="%s"' %(user,passwd)</span></span><br><span class="line">            <span class="comment"># sql = "select 'x' from tb_user where username='%s' and userpass='%s'" %(user,passwd)</span></span><br><span class="line">            <span class="comment"># if cursor.execute(sql)&gt;0:</span></span><br><span class="line">            <span class="comment">#     print('登录成功')</span></span><br><span class="line">            <span class="comment"># else:</span></span><br><span class="line">            <span class="comment">#     print('用户名或密码不正确')</span></span><br><span class="line">            <span class="keyword">if</span> cursor.execute(</span><br><span class="line">                    <span class="string">'select 1 from tb_user where username=%s and userpass=%s'</span>,(user,passwd)):</span><br><span class="line">                print(<span class="string">'登录成功'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'用户名或密码不正确'</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> sql注射 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>阿里云连接mysql报错解决</title>
      <link href="/2018/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
      <url>/2018/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
      <content type="html"><![CDATA[<h4 id="连接报错2003"><a href="#连接报错2003" class="headerlink" title="连接报错2003"></a>连接报错2003</h4><h5 id="先检查linux系统的防火墙是否开启"><a href="#先检查linux系统的防火墙是否开启" class="headerlink" title="先检查linux系统的防火墙是否开启"></a>先检查linux系统的防火墙是否开启</h5><p>1.查看防火墙运行状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# firewall-cmd --state</span><br><span class="line">running</span><br></pre></td></tr></table></figure><p>2.如果显示running就表示系统防火墙已经开启</p><p>这样的话需要给防火墙打开数据库的3306端口</p><p>以3306端口为例打开端口的命令为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=3306/tcp --permanent --zone=public</span><br></pre></td></tr></table></figure><h5 id="检查阿里云是否打开数据库对应的端口"><a href="#检查阿里云是否打开数据库对应的端口" class="headerlink" title="检查阿里云是否打开数据库对应的端口"></a>检查阿里云是否打开数据库对应的端口</h5><p>登录阿里云官网 —-进入实例—安全组规则 —入方向—设置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">授权策略协议类型端口范围授权类型授权对象  描述   优先级</span><br><span class="line">允许      自定义       TCP      3306/3306  地址段访问  0.0.0.0/0     1</span><br></pre></td></tr></table></figure><h4 id="navicat连接阿里云服务器报1130错误的解决方法"><a href="#navicat连接阿里云服务器报1130错误的解决方法" class="headerlink" title="navicat连接阿里云服务器报1130错误的解决方法"></a>navicat连接阿里云服务器报1130错误的解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">今天使用阿里云服务器，用Navicat连接阿里云服务器，连接过程中报1130错误，</span><br><span class="line"></span><br><span class="line">ERROR 1130: Host &apos;192.168.1.3&apos; is not allowed to connect to thisMySQL server </span><br><span class="line"></span><br><span class="line">解决方法： </span><br><span class="line"></span><br><span class="line">1。改表法。可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改&quot;mysql&quot; 数据库里的 &quot;user&quot; 表里的 &quot;host&quot;项，从&quot;localhost&quot;改称&quot;%&quot; </span><br><span class="line"></span><br><span class="line">或者服务器操作熟练地话直接写数据库授权</span><br><span class="line"></span><br><span class="line">grant all privileges on 数据库名.* to 用户名@&apos;%&apos; identified by &apos;用户密码&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> MySQL错误2003 1130 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github生成ssh密钥</title>
      <link href="/2018/05/13/Github%E7%94%9F%E6%88%90ssh%E5%AF%86%E9%92%A5/"/>
      <url>/2018/05/13/Github%E7%94%9F%E6%88%90ssh%E5%AF%86%E9%92%A5/</url>
      <content type="html"><![CDATA[<h2 id="Github配置密钥"><a href="#Github配置密钥" class="headerlink" title="Github配置密钥"></a>Github配置密钥</h2><p>我们在githob创建项目后，本地使用git 克隆代码 需要在githob配置密钥，才可以</p><p>步骤：</p><p>下载git，进行安装，安装好后。点击桌面，右键，选择》》git  bash</p><p>在弹出的黑框口里面输入</p><p>ssh-keygen -t rsa -C 你的邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如 ：ssh-keygen -t rsa -C  "380604322@qq.com"</span><br></pre></td></tr></table></figure><p>然后一直回车，就行了</p><p>最后得到如图</p><p><img src="/Users/lizhonglin/Desktop/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-12%20%E4%B8%8B%E5%8D%8812.52.40.png" alt="幕快照 2018-05-12 下午12.52.4"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它会生成一个 id _rsa.pub 文件，看上面截图，它有 保存路径的地址说明，按照保存路径找到文件，打开，复制里面的内容</span><br></pre></td></tr></table></figure><h3 id="在登陆自己的github"><a href="#在登陆自己的github" class="headerlink" title="在登陆自己的github"></a>在登陆自己的github</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如下图:</span><br><span class="line">点击settings》》sshkey》》new ssh key（右上）</span><br><span class="line">在页面随便填入一个title，然后key里面，把刚才复制的那个文本信息拷贝进去</span><br></pre></td></tr></table></figure><p><img src="/var/folders/v9/jcddlqfx4tg9c57c6xvt8gyr0000gn/T/abnerworks.Typora/image-201805121257098.png" alt="mage-20180512125709"></p><p><img src="/var/folders/v9/jcddlqfx4tg9c57c6xvt8gyr0000gn/T/abnerworks.Typora/image-201805121259324.png" alt="mage-20180512125932"></p><p>点击add ssh key ，没有提示错误，就ok了。如果出现问题，可能是你的key没有复制完成导致</p>]]></content>
      
      
        <tags>
            
            <tag> Git SSH </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo安装教程</title>
      <link href="/2018/05/13/Hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2018/05/13/Hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">提交问题</a>，我会尽力解决您的问题。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><blockquote><p>Mac 用户</p><p>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> ：<code>brew install git</code>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a> 安装。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Windows 用户</p><p>由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">这个页面</a>，收录了存储于百度云的下载地址。</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a>。</p><p>cURL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><p>或者您也可以下载 <a href="http://nodejs.org/" target="_blank" rel="noopener">安装程序</a> 来安装。</p><blockquote><p>Windows 用户</p><p>对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选<strong>Add to PATH</strong>选项。<br>另外，您也可以使用<strong>Git Bash</strong>，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用<strong>Git Bash</strong>来进行操作。</p></blockquote><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/13/hello-world/"/>
      <url>/2018/05/13/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
