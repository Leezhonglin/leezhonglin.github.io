<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Python中的SQL注射攻击</title>
      <link href="/2018/05/17/Python%E4%B8%AD%E7%9A%84SQL%E6%B3%A8%E5%B0%84%E6%94%BB%E5%87%BB/"/>
      <url>/2018/05/17/Python%E4%B8%AD%E7%9A%84SQL%E6%B3%A8%E5%B0%84%E6%94%BB%E5%87%BB/</url>
      <content type="html"><![CDATA[<h5 id="SQL注射攻击"><a href="#SQL注射攻击" class="headerlink" title="SQL注射攻击"></a>SQL注射攻击</h5><p>​    所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。 [1]  比如先前的很多影视网站泄露VIP会员密码大多就是通过WEB表单递交查询字符暴出的，这类表单特别容易受到SQL注入式攻击．</p><h6 id="演示一下什么是sql注入"><a href="#演示一下什么是sql注入" class="headerlink" title="演示一下什么是sql注入"></a>演示一下什么是sql注入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 创建用户表</span><br><span class="line">create table tb_user</span><br><span class="line">(</span><br><span class="line">username varchar(20) not null,</span><br><span class="line">userpass varchar(20) not null</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 插入用户账号</span><br><span class="line">insert into tb_user values (&apos;admin&apos;,&apos;1q23&apos;);</span><br></pre></td></tr></table></figure><h6 id="Python-代码"><a href="#Python-代码" class="headerlink" title="Python 代码"></a>Python 代码</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    config =&#123;</span><br><span class="line">        <span class="string">'host'</span> : <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'user'</span> : <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'passwd'</span> :<span class="string">'123456'</span>,</span><br><span class="line">        <span class="string">'db'</span> : <span class="string">'hrs'</span>,</span><br><span class="line">        <span class="string">'charset'</span> : <span class="string">'utf8'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#连接数据库</span></span><br><span class="line">    conn = pymysql.connect(**config)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            user = input(<span class="string">'请输入用户名:'</span>)</span><br><span class="line">            passwd = input(<span class="string">'请输入密码:'</span>)</span><br><span class="line">            <span class="comment">#写sql语句尽量不要使用这种方法,容易被SQL注射攻击</span></span><br><span class="line">            <span class="comment">#查询用户名密码是否与数据库匹配</span></span><br><span class="line">            sql = <span class="string">"select 'x' from tb_user where username='%s' and userpass='%s'"</span> %(user,passwd)</span><br><span class="line">   <span class="comment">#判断是否有内容</span></span><br><span class="line">            <span class="keyword">if</span> cursor.execute(sql)&gt;<span class="number">0</span>:</span><br><span class="line">                print(<span class="string">'登录成功'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'用户名或密码不正确'</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h6 id="如何绕过登录验证"><a href="#如何绕过登录验证" class="headerlink" title="如何绕过登录验证"></a>如何绕过登录验证</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入用户名:admin</span><br><span class="line">请输入密码:&apos; or &apos;1&apos;=&apos;1  或者 a&apos; or &apos;2&apos;&gt;&apos;1   ##就能绕过密码检测登录成功.</span><br><span class="line">登录成功</span><br></pre></td></tr></table></figure><h6 id="Python写代码如何避免问题"><a href="#Python写代码如何避免问题" class="headerlink" title="Python写代码如何避免问题"></a>Python写代码如何避免问题</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##代码可以改造为这样就能避免SQL注射攻击:</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    config =&#123;</span><br><span class="line">        <span class="string">'host'</span> : <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'user'</span> : <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'passwd'</span> :<span class="string">'123456'</span>,</span><br><span class="line">        <span class="string">'db'</span> : <span class="string">'hrs'</span>,</span><br><span class="line">        <span class="string">'charset'</span> : <span class="string">'utf8'</span>,</span><br><span class="line">        <span class="string">'cursorclass'</span> : pymysql.cursors.DictCursor</span><br><span class="line">    &#125;</span><br><span class="line">    conn = pymysql.connect(**config)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            user = input(<span class="string">'请输入用户名:'</span>)</span><br><span class="line">            passwd = input(<span class="string">'请输入密码:'</span>)</span><br><span class="line">            <span class="comment"># sql = 'select "x" from tb_user where username="%s" and userpass="%s"' %(user,passwd)</span></span><br><span class="line">            <span class="comment"># sql = "select 'x' from tb_user where username='%s' and userpass='%s'" %(user,passwd)</span></span><br><span class="line">            <span class="comment"># if cursor.execute(sql)&gt;0:</span></span><br><span class="line">            <span class="comment">#     print('登录成功')</span></span><br><span class="line">            <span class="comment"># else:</span></span><br><span class="line">            <span class="comment">#     print('用户名或密码不正确')</span></span><br><span class="line">            <span class="keyword">if</span> cursor.execute(</span><br><span class="line">                    <span class="string">'select 1 from tb_user where username=%s and userpass=%s'</span>,(user,passwd)):</span><br><span class="line">                print(<span class="string">'登录成功'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'用户名或密码不正确'</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> sql注射 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>阿里云连接mysql报错解决</title>
      <link href="/2018/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
      <url>/2018/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
      <content type="html"><![CDATA[<h4 id="连接报错2003"><a href="#连接报错2003" class="headerlink" title="连接报错2003"></a>连接报错2003</h4><h5 id="先检查linux系统的防火墙是否开启"><a href="#先检查linux系统的防火墙是否开启" class="headerlink" title="先检查linux系统的防火墙是否开启"></a>先检查linux系统的防火墙是否开启</h5><p>1.查看防火墙运行状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@izm5eifctth7468z9e6fz0z ~]# firewall-cmd --state</span><br><span class="line">running</span><br></pre></td></tr></table></figure><p>2.如果显示running就表示系统防火墙已经开启</p><p>这样的话需要给防火墙打开数据库的3306端口</p><p>以3306端口为例打开端口的命令为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port=3306/tcp --permanent --zone=public</span><br></pre></td></tr></table></figure><h5 id="检查阿里云是否打开数据库对应的端口"><a href="#检查阿里云是否打开数据库对应的端口" class="headerlink" title="检查阿里云是否打开数据库对应的端口"></a>检查阿里云是否打开数据库对应的端口</h5><p>登录阿里云官网 —-进入实例—安全组规则 —入方向—设置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">授权策略协议类型端口范围授权类型授权对象  描述   优先级</span><br><span class="line">允许      自定义       TCP      3306/3306  地址段访问  0.0.0.0/0     1</span><br></pre></td></tr></table></figure><h4 id="navicat连接阿里云服务器报1130错误的解决方法"><a href="#navicat连接阿里云服务器报1130错误的解决方法" class="headerlink" title="navicat连接阿里云服务器报1130错误的解决方法"></a>navicat连接阿里云服务器报1130错误的解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">今天使用阿里云服务器，用Navicat连接阿里云服务器，连接过程中报1130错误，</span><br><span class="line"></span><br><span class="line">ERROR 1130: Host &apos;192.168.1.3&apos; is not allowed to connect to thisMySQL server </span><br><span class="line"></span><br><span class="line">解决方法： </span><br><span class="line"></span><br><span class="line">1。改表法。可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改&quot;mysql&quot; 数据库里的 &quot;user&quot; 表里的 &quot;host&quot;项，从&quot;localhost&quot;改称&quot;%&quot; </span><br><span class="line"></span><br><span class="line">或者服务器操作熟练地话直接写数据库授权</span><br><span class="line"></span><br><span class="line">grant all privileges on 数据库名.* to 用户名@&apos;%&apos; identified by &apos;用户密码&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> MySQL错误2003 1130 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github生成ssh密钥</title>
      <link href="/2018/05/13/Github%E7%94%9F%E6%88%90ssh%E5%AF%86%E9%92%A5/"/>
      <url>/2018/05/13/Github%E7%94%9F%E6%88%90ssh%E5%AF%86%E9%92%A5/</url>
      <content type="html"><![CDATA[<h2 id="Github配置密钥"><a href="#Github配置密钥" class="headerlink" title="Github配置密钥"></a>Github配置密钥</h2><p>我们在githob创建项目后，本地使用git 克隆代码 需要在githob配置密钥，才可以</p><p>步骤：</p><p>下载git，进行安装，安装好后。点击桌面，右键，选择》》git  bash</p><p>在弹出的黑框口里面输入</p><p>ssh-keygen -t rsa -C 你的邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如 ：ssh-keygen -t rsa -C  "380604322@qq.com"</span><br></pre></td></tr></table></figure><p>然后一直回车，就行了</p><p>最后得到如图</p><p><img src="/Users/lizhonglin/Desktop/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-12%20%E4%B8%8B%E5%8D%8812.52.40.png" alt="幕快照 2018-05-12 下午12.52.4"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它会生成一个 id _rsa.pub 文件，看上面截图，它有 保存路径的地址说明，按照保存路径找到文件，打开，复制里面的内容</span><br></pre></td></tr></table></figure><h3 id="在登陆自己的github"><a href="#在登陆自己的github" class="headerlink" title="在登陆自己的github"></a>在登陆自己的github</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如下图:</span><br><span class="line">点击settings》》sshkey》》new ssh key（右上）</span><br><span class="line">在页面随便填入一个title，然后key里面，把刚才复制的那个文本信息拷贝进去</span><br></pre></td></tr></table></figure><p><img src="/var/folders/v9/jcddlqfx4tg9c57c6xvt8gyr0000gn/T/abnerworks.Typora/image-201805121257098.png" alt="mage-20180512125709"></p><p><img src="/var/folders/v9/jcddlqfx4tg9c57c6xvt8gyr0000gn/T/abnerworks.Typora/image-201805121259324.png" alt="mage-20180512125932"></p><p>点击add ssh key ，没有提示错误，就ok了。如果出现问题，可能是你的key没有复制完成导致</p>]]></content>
      
      
        <tags>
            
            <tag> Git SSH </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo安装教程</title>
      <link href="/2018/05/13/Hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2018/05/13/Hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">提交问题</a>，我会尽力解决您的问题。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><blockquote><p>Mac 用户</p><p>您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> ：<code>brew install git</code>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a> 安装。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Windows 用户</p><p>由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">这个页面</a>，收录了存储于百度云的下载地址。</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a>。</p><p>cURL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><p>或者您也可以下载 <a href="http://nodejs.org/" target="_blank" rel="noopener">安装程序</a> 来安装。</p><blockquote><p>Windows 用户</p><p>对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选<strong>Add to PATH</strong>选项。<br>另外，您也可以使用<strong>Git Bash</strong>，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用<strong>Git Bash</strong>来进行操作。</p></blockquote><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/13/hello-world/"/>
      <url>/2018/05/13/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
